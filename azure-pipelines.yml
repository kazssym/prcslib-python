# azure-pipelines.yml - configuration for Azure Pipelines
# Copyright (C) 2020 Kaz Nishimura
#
# Copying and distribution of this file, with or without modification, are
# permitted in any medium without royalty provided the copyright notice and
# this notice are preserved.  This file is offered as-is, without any warranty.
---
  trigger:
    - master
    - feature/**
  stages:
    - stage: Default
      jobs:
        - job: Build
          pool:
            vmImage: ubuntu-16.04
          steps:
            - task: UsePythonVersion@0
            - bash: |
                pip install "setuptools>=38.6" wheel
              displayName: Install dependencies
            - bash: |
                python ./setup.py test
              displayName: Test
            - task: PublishTestResults@2
            - bash: |
                python ./setup.py sdist bdist_wheel
              displayName: Create archives
            - publish: dist
              artifact: dist
    - stage: testDeployment
      displayName: Test deployment
      dependsOn: Default
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
      jobs:
        - deployment: Upload
          environment: test
          pool:
            vmImage: ubuntu-16.04
          strategy:
            runOnce:
              deploy:
                steps:
                  - task: UsePythonVersion@0
                  - bash: |
                      pip install twine
                    displayName: Install dependencies
                  - task: TwineAuthenticate@1
                    inputs:
                      artifactFeed: $(System.TeamProject)/prcslib
                  - bash: |
                      twine upload -r prcslib --config-file $(PYPIRC_PATH) $(Pipeline.Workspace)/dist/*
                    displayName: Upload
    - stage: deployment
      displayName: Production deployment
      dependsOn: testDeployment
      jobs:
        - deployment: Upload
          environment: production
          pool:
            vmImage: ubuntu-16.04
          strategy:
            runOnce:
              deploy:
                steps:
                  - task: UsePythonVersion@0
                  - bash: |
                      pip install twine
                    displayName: Install dependencies
                  - task: TwineAuthenticate@1
                    inputs:
                      pythonUploadServiceConnection: pypi-test
                  - bash: |
                      twine upload -r pypi-test --config-file $(PYPIRC_PATH) $(Pipeline.Workspace)/dist/*
                    displayName: Upload
